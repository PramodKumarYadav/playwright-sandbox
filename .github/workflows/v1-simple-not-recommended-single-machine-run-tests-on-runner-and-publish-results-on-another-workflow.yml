# This workflow is not recommended to be used and is for educational purposes only.
# Reason is,
# 1. It uses "publishing-from-a-branch" strategy that creates another automated workflow to deploy the test results to GitHub Pages.
#   Which means the results URL is not in context with the pipeline that runs the test. This is not very useful.
#   Reference: https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-from-a-branch
# 2. It uses "crazy-max/ghaction-github-pages@v4" action to deploy the test results to GitHub Pages. This action is not verified (compared to the actions provided by GitHub).
# 3. This does not use container but installs Playwright browsers on the runner machine. This is slower compared to using docker containe which comes with pre installed browsers and dependencies.
#   Also this approach is not as robust as using docker container since it can break due to changes in the dependencies that are being installed.
# 4. Last but not the least, this workflow demonstrates how to run tests on a single machine. This is much slower than the other example that runs tests on multiple machines in parallel using Sharding.

name: Single machine - Run Tests and Publish test results to GitHub Pages
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Required to deploy to GitHub Pages
permissions:
  contents: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  playwright:
    name: "Playwright Tests"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install project dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: playwright-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
