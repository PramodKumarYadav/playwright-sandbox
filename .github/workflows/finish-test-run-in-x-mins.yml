# To run unit tests and new tests on a pull request on dev environment
name: get test list

on:
  pull_request:
    branches: [main]

  # Allows us to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Mark Repository as Safe
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install project dependencies
        run: npm ci

      - name: Cache Playwright Browsers
        id: cache-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright Browsers
        if: steps.cache-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: List Playwright Tests
        id: list-tests
        run: |
          # Run the Playwright test list command
          test_list=$(npx playwright test --list)

          # Debug: Display the raw output
          echo "Raw test list output:"
          echo "$test_list"

          # Filter output to include only lines starting with '['
          filtered_list=$(echo "$test_list" | grep -E '^\s*\[' | sed 's/^\s*//; s/\s*$//')

          # Debug: Display the filtered output
          echo "Filtered test list:"
          echo "$filtered_list"

          # Check if filtered_list is empty
          if [ -z "$filtered_list" ]; then
            echo "No tests found matching the pattern. Exiting with error."
            exit 1
          fi

          # Convert the filtered output into a JSON array
          test_array=$(echo "$filtered_list" | awk '{$1=$1;print}' | jq -R -s 'split("\n") | map(select(length > 0))')

          # Save the array as an output
          echo "TEST_LIST=$test_array" >> $GITHUB_ENV

      - name: Display Test List
        run: |
          echo "Test list: $TEST_LIST"

      - name: Use Test List
        run: |
          echo "Processing the test array..."
          for test in $(echo $TEST_LIST | jq -r '.[]'); do
            echo "Test: $test"
          done
        env:
          TEST_LIST: ${{ env.TEST_LIST }}
