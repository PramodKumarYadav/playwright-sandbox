name: Reusable workflow to run tests

on:
  workflow_call:
    inputs:
      test-environment:
        required: true
        type: string

      tests-to-include:
        required: true
        type: string

      tests-to-exclude:
        required: false
        type: string

      projects:
        required: true
        type: string

      trigger:
        required: true
        type: string

      test-type:
        required: true
        type: string

jobs:
  run-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: ${{ inputs.test-environment }}
    # Latest docker image version is here: https://playwright.dev/docs/docker
    # All playwright binary versions are here: https://www.npmjs.com/package/playwright?activeTab=versions
    container:
      image: mcr.microsoft.com/playwright:v1.47.2-jammy
    strategy:
      fail-fast: false
      matrix:
        # Give same names for runners.
        runner: ["first", "second", "third"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add safe directory exception
        run: git config --global --add safe.directory /__w/playwright-sandbox/playwright-sandbox

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        id: e2e-tests
        # For sharding, index is zero based so add one to get shards index as 1,2,3 and thus ratio as 1/3, 2/3, 3/3.
        run: >
          CUSTOM_TAG_1=${{ inputs.test-type }} npx browserstack-node-sdk playwright test 
          --shard=$((${{ strategy.job-index }} + 1))/${{ strategy.job-total }} 
          --grep="${{ inputs.tests-to-include }}" 
          --grep-invert="${{ inputs.tests-to-exclude }}" 
          ${{ inputs.projects }}
        env:
          # HOME: /root # DO NOT set HOME to /root, it will break playwright. Leaving it here to avoid someone adding it in the future.
          NODE_ENV: ${{ inputs.test-environment }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME}}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY}}
          BROWSERSTACK_BUILD_NAME: ${{ inputs.trigger }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.runner }}
          path: blob-report
          retention-days: 1

  test-run-result:
    needs: [run-tests]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    outputs:
      run-result: ${{ steps.evaluate-run-result.outputs.run-result }}
    steps:
      - name: Get BrowserStack Result
        uses: PramodKumarYadav/browserstack-test-observability-get-quality-gate-result@main
        id: get_browserstack_result
        with:
          project-name: "playwright-sandbox"
          build-name: ${{ inputs.trigger }}
          build-tags: ${{ inputs.test-type }}
          browserstack-username: ${{ secrets.BROWSERSTACK_USERNAME}}
          browserstack-access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY}}
          timeout-in-seconds: 500

      - name: Evaluate run result
        id: evaluate-run-result
        run: |
          echo "run-result=${{ steps.get_browserstack_result.outputs.quality-gate-result }}" >> $GITHUB_OUTPUT

      - name: Log result
        run: |
          echo "Test Run Result: ${{ steps.evaluate-run-result.outputs.run-result }}"
          if [ "${{ steps.evaluate-run-result.outputs.run-result }}" == "failed" ]; then
            exit 1
          fi

  # Only if this test run was triggered by a Dispatch event, Notify caller repository.
  notify-caller-service:
    needs: [test-run-result]
    if: ${{ always() && github.event_name == 'repository_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Notify caller repository of test run status
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.PAT_TOKEN_AUG_2025 }}
          repository: "${{ github.event.client_payload.github.event.repository.full_name }}"
          event-type: "test-run-completed-on-${{ inputs.test-environment }}-for-${{ github.event.client_payload.github.event.repository.name }}"
          client-payload: '{ "github": ${{ toJson(github) }}, "TEST_RUN_RESULT": "${{ needs.test-run-result.outputs.run-result }}", "TEST_ENV": "${{ inputs.test-environment }}" , "TAG_OF_TESTS_EXECUTED": "${{ inputs.tests-to-include }}", "TAG": "${{ github.event.client_payload.TAG }}" }'

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    needs: [run-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into single HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload test report for local debugging
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 90
# NOTE: We dont publish report on GitHub pages because I learned over a period of time that to be able to do that we have to stop "parallel - concurrent" workflow runs which is a very bad compromise from
# the performance perspective. So, I have decided to not publish the report on GitHub pages. Instead, I will download the report and publish it locally for debugging.
